daemon off;
user nginx;
worker_processes 1;

error_log /dev/stderr warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # logs
  log_format main  '{ "@timestamp": "$time_iso8601", '
                       '"@fields": { '
                       '"remote_addr": "$remote_addr", '
                       '"remote_user": "$remote_user", '
                       '"body_bytes_sent": "$body_bytes_sent", '
                       '"request_time": "$request_time", '
                       '"status": "$status", '
                       '"request": "$request", '
                       '"request_method": "$request_method", '
                       '"http_referrer": "$http_referer", '
                       '"http_user_agent": "$http_user_agent" } }';

  access_log /dev/stdout main;

  sendfile on;
  server_tokens off;

  # timeouts
  client_body_timeout 300;
  client_header_timeout 300;
  keepalive_timeout 300;
  send_timeout 300;

  # compression
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 1000;
  gzip_proxied any;
  gzip_types application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon text/css text/plain text/x-component;
  gzip_vary on;

  # request sizes
  client_max_body_size 128M;

  # ssl from https://cipherli.st/
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_ecdh_curve secp384r1;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 5s;
  #add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;

  # http
  server {
    listen 80;

    return 301 https://$host$request_uri;
  }

  # https
  server {
    listen 443 ssl;

    ssl on;
    ssl_certificate /etc/ssl/private/ssl.pem;
    ssl_certificate_key /etc/ssl/private/ssl.key;
    ssl_trusted_certificate /etc/ssl/private/ssl.pem;

    allow 0.0.0.0/0;
    deny  all;

    location / {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_temp_path /tmp/nginx/proxy_temp 1 2;

      proxy_pass http://${OFFLOAD_TO_HOST}:${OFFLOAD_TO_PORT};

    }
  }

  # readiness
  server {
    listen 81;

    location /readiness {
      keepalive_timeout 0;
      access_log off;

      proxy_pass http://${OFFLOAD_TO_HOST}:${OFFLOAD_TO_PORT};
    }
  }

  # liveness
  server {
    listen 82;

    location /liveness {
      keepalive_timeout 0;
      access_log off;
      add_header Content-Type text/plain;
      return 200;
    }
  }
}